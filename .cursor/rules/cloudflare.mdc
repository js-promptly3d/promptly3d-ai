# Cloudflare Deployment & Hosting Rules

## Overview
Cloudflare provides global CDN, DNS, DDoS protection, and security for static and dynamic sites. Use these rules to ensure best practices for deploying and managing your site on Cloudflare.

## Deployment Best Practices
- Use Cloudflare Pages for static site hosting or configure DNS for your custom backend.
- Set up automatic deployments from your main branch for CI/CD.
- Use environment variables for secrets and API keys (never commit secrets).
- Enable build caching for faster deploys.

## DNS Management
- Use CNAME flattening for apex domains.
- Always use Cloudflare’s nameservers for full protection.
- Set up A/AAAA/CNAME records as needed for your stack.
- Use proxied (orange cloud) DNS for security and performance.

## Security Best Practices
- Enable SSL/TLS (Full or Full Strict mode recommended).
- Use Always Use HTTPS and Automatic HTTPS Rewrites.
- Enable Web Application Firewall (WAF) and set security level to at least Medium.
- Use Rate Limiting to protect APIs and login endpoints.
- Enable Bot Fight Mode to reduce automated abuse.
- Set up Page Rules for sensitive paths (e.g., /admin) to increase security.

## Performance Optimization
- Enable Brotli and GZIP compression.
- Use Cloudflare’s image optimization (Polish, Mirage) for faster image delivery.
- Enable caching for static assets (HTML, CSS, JS, images) with long TTLs.
- Use Cache Everything with caution (avoid caching dynamic content).
- Use Workers for edge-side logic if needed.

## Analytics & Monitoring
- Use Cloudflare Analytics for traffic, threat, and performance insights.
- Set up alerts for unusual spikes in traffic or threats.

## Troubleshooting
- Use Development Mode to bypass cache when debugging.
- Purge cache after deploys or when updating static assets.
- Check Firewall Events for blocked requests.

## References
- https://developers.cloudflare.com/pages/
- https://developers.cloudflare.com/dns/
- https://developers.cloudflare.com/waf/
- https://developers.cloudflare.com/ssl/